# Multi-stage Dockerfile untuk ML service

# Stage 1: Base image dengan dependencies\nFROM python:3.11-slim as base\n\n# Set environment variables\nENV PYTHONUNBUFFERED=1\nENV PYTHONDONTWRITEBYTECODE=1\nENV PIP_NO_CACHE_DIR=1\nENV PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    curl \\\n    git \\\n    libpq-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create non-root user\nRUN useradd --create-home --shell /bin/bash mluser\n\n# Set working directory\nWORKDIR /app\n\n# Stage 2: Dependencies installation\nFROM base as dependencies\n\n# Copy requirements\nCOPY requirements.txt .\n\n# Install Python dependencies\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Stage 3: Development image\nFROM dependencies as development\n\n# Copy source code\nCOPY . .\n\n# Create necessary directories\nRUN mkdir -p data/models data/artifacts data/features logs\n\n# Change ownership to mluser\nRUN chown -R mluser:mluser /app\n\n# Switch to non-root user\nUSER mluser\n\n# Expose port\nEXPOSE 8001\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8001/health || exit 1\n\n# Default command\nCMD [\"python\", \"-m\", \"uvicorn\", \"app.api.main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8001\"]\n\n# Stage 4: Production image\nFROM dependencies as production\n\n# Copy only necessary files\nCOPY app/ ./app/\nCOPY pyproject.toml ./\n\n# Create necessary directories with proper permissions\nRUN mkdir -p data/models data/artifacts data/features logs && \\\n    chown -R mluser:mluser /app\n\n# Switch to non-root user\nUSER mluser\n\n# Expose port\nEXPOSE 8001\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8001/health || exit 1\n\n# Production command with gunicorn\nCMD [\"python\", \"-m\", \"gunicorn\", \"app.api.main:app\", \"-w\", \"4\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"--bind\", \"0.0.0.0:8001\"]\n