#!/usr/bin/env python3\n\nimport xlsxwriter\nimport os\nfrom datetime import datetime\n\ndef create_feedback_template():\n    \"\"\"Create comprehensive Excel template untuk feedback collection.\"\"\"\n    \n    output_dir = '/workspace/user-testing-materials/feedback-forms'\n    os.makedirs(output_dir, exist_ok=True)\n    \n    filename = f\"{output_dir}/user_testing_feedback_template.xlsx\"\n    \n    # Create workbook\n    workbook = xlsxwriter.Workbook(filename)\n    \n    # Define formats\n    header_format = workbook.add_format({\n        'bold': True,\n        'bg_color': '#4472C4',\n        'font_color': 'white',\n        'border': 1,\n        'align': 'center',\n        'valign': 'vcenter'\n    })\n    \n    subheader_format = workbook.add_format({\n        'bold': True,\n        'bg_color': '#D9E1F2',\n        'border': 1,\n        'align': 'left',\n        'valign': 'vcenter'\n    })\n    \n    data_format = workbook.add_format({\n        'border': 1,\n        'align': 'left',\n        'valign': 'top',\n        'text_wrap': True\n    })\n    \n    # Create main feedback sheet\n    worksheet = workbook.add_worksheet('Individual Feedback')\n    \n    # Set column widths\n    worksheet.set_column('A:A', 30)  # Questions\n    worksheet.set_column('B:B', 15)  # Response Type\n    worksheet.set_column('C:C', 20)  # Response\n    worksheet.set_column('D:D', 30)  # Comments\n    worksheet.set_column('E:E', 15)  # Facilitator Notes\n    \n    row = 0\n    \n    # Title\n    worksheet.merge_range(row, 0, row, 4, 'USER TESTING FEEDBACK FORM - KOMODITAS WATCH', header_format)\n    row += 2\n    \n    # Session Info\n    worksheet.write(row, 0, 'SESSION INFORMATION', subheader_format)\n    worksheet.write(row, 1, 'Type', subheader_format)\n    worksheet.write(row, 2, 'Response', subheader_format)\n    worksheet.write(row, 3, 'Comments', subheader_format)\n    worksheet.write(row, 4, 'Notes', subheader_format)\n    row += 1\n    \n    session_info = [\n        ('Session ID', 'Text'),\n        ('Date', 'Date'),\n        ('Start Time', 'Time'),\n        ('End Time', 'Time'),\n        ('Facilitator', 'Text'),\n        ('Participant Name (Optional)', 'Text'),\n        ('Stakeholder Type', 'Petani/Distributor/Regulator'),\n        ('Location/Province', 'Text'),\n        ('Tech Experience Level', 'Pemula/Menengah/Mahir'),\n    ]\n    \n    for item, resp_type in session_info:\n        worksheet.write(row, 0, item, data_format)\n        worksheet.write(row, 1, resp_type, data_format)\n        worksheet.write(row, 2, '', data_format)\n        worksheet.write(row, 3, '', data_format)\n        worksheet.write(row, 4, '', data_format)\n        row += 1\n    \n    row += 1\n    \n    # Usability Assessment\n    worksheet.write(row, 0, 'USABILITY ASSESSMENT (1-5 Scale)', subheader_format)\n    worksheet.write(row, 1, 'Rating', subheader_format)\n    worksheet.write(row, 2, 'Score', subheader_format)\n    worksheet.write(row, 3, 'Comments', subheader_format)\n    worksheet.write(row, 4, 'Observer Notes', subheader_format)\n    row += 1\n    \n    usability_questions = [\n        'Navigation - Finding information',\n        'Navigation - Moving between pages',\n        'Navigation - Understanding menu structure',\n        'Performance - Page loading speed',\n        'Design - Visual appearance',\n        'Design - Text clarity',\n        'Design - Button/element size',\n        'Design - Mobile responsiveness',\n    ]\n    \n    for question in usability_questions:\n        worksheet.write(row, 0, question, data_format)\n        worksheet.write(row, 1, '1-5', data_format)\n        worksheet.write(row, 2, '', data_format)\n        worksheet.write(row, 3, '', data_format)\n        worksheet.write(row, 4, '', data_format)\n        row += 1\n    \n    row += 1\n    \n    # Feature Assessment\n    worksheet.write(row, 0, 'FEATURE ASSESSMENT', subheader_format)\n    worksheet.write(row, 1, 'Type', subheader_format)\n    worksheet.write(row, 2, 'Response', subheader_format)\n    worksheet.write(row, 3, 'Details', subheader_format)\n    worksheet.write(row, 4, 'Observer Notes', subheader_format)\n    row += 1\n    \n    feature_questions = [\n        ('Dashboard suitability for needs', 'Rating 1-5'),\n        ('Prediction accuracy perception', 'Rating 1-5'),\n        ('Chart visualization clarity', 'Rating 1-5'),\n        ('Decision making usefulness', 'Rating 1-5'),\n        ('Regional heatmap clarity', 'Rating 1-5'),\n        ('Weather correlation usefulness', 'Rating 1-5'),\n        ('Preferred prediction horizon', '1-3 days/1 week/2 weeks/1 month'),\n        ('Most useful weather data', 'Rainfall/Temperature/Humidity'),\n    ]\n    \n    for question, resp_type in feature_questions:\n        worksheet.write(row, 0, question, data_format)\n        worksheet.write(row, 1, resp_type, data_format)\n        worksheet.write(row, 2, '', data_format)\n        worksheet.write(row, 3, '', data_format)\n        worksheet.write(row, 4, '', data_format)\n        row += 1\n    \n    row += 1\n    \n    # Task Completion\n    worksheet.write(row, 0, 'TASK COMPLETION ASSESSMENT', subheader_format)\n    worksheet.write(row, 1, 'Completed?', subheader_format)\n    worksheet.write(row, 2, 'Difficulty', subheader_format)\n    worksheet.write(row, 3, 'Time (min)', subheader_format)\n    worksheet.write(row, 4, 'Issues Encountered', subheader_format)\n    row += 1\n    \n    tasks = [\n        'Task 1: [Specific task given]',\n        'Task 2: [Specific task given]',\n        'Task 3: [Specific task given]',\n        'Overall task completion satisfaction',\n    ]\n    \n    for task in tasks:\n        worksheet.write(row, 0, task, data_format)\n        worksheet.write(row, 1, 'Yes/Partial/No', data_format)\n        worksheet.write(row, 2, '1-5 Scale', data_format)\n        worksheet.write(row, 3, '', data_format)\n        worksheet.write(row, 4, '', data_format)\n        row += 1\n    \n    row += 1\n    \n    # Value Proposition\n    worksheet.write(row, 0, 'VALUE PROPOSITION ASSESSMENT', subheader_format)\n    worksheet.write(row, 1, 'Type', subheader_format)\n    worksheet.write(row, 2, 'Response', subheader_format)\n    worksheet.write(row, 3, 'Explanation', subheader_format)\n    worksheet.write(row, 4, 'Observer Notes', subheader_format)\n    row += 1\n    \n    value_questions = [\n        ('Platform helpfulness for work/business', 'Rating 1-5'),\n        ('Biggest benefit perceived', 'Open text'),\n        ('Areas needing improvement', 'Open text'),\n        ('Willingness to pay (monthly)', 'Free/25-50k/50-100k/100-250k/>250k'),\n        ('Net Promoter Score', 'Rating 0-10'),\n        ('Three words describing platform', 'Open text'),\n    ]\n    \n    for question, resp_type in value_questions:\n        worksheet.write(row, 0, question, data_format)\n        worksheet.write(row, 1, resp_type, data_format)\n        worksheet.write(row, 2, '', data_format)\n        worksheet.write(row, 3, '', data_format)\n        worksheet.write(row, 4, '', data_format)\n        # Increase row height for open text\n        if 'Open text' in resp_type:\n            worksheet.set_row(row, 30)\n        row += 1\n    \n    row += 1\n    \n    # Technical Performance\n    worksheet.write(row, 0, 'TECHNICAL PERFORMANCE', subheader_format)\n    worksheet.write(row, 1, 'Rating', subheader_format)\n    worksheet.write(row, 2, 'Score', subheader_format)\n    worksheet.write(row, 3, 'Issues/Bugs Found', subheader_format)\n    worksheet.write(row, 4, 'Severity', subheader_format)\n    row += 1\n    \n    tech_questions = [\n        'Loading speed',\n        'System stability',\n        'Device compatibility',\n        'Data accuracy',\n    ]\n    \n    for question in tech_questions:\n        worksheet.write(row, 0, question, data_format)\n        worksheet.write(row, 1, '1-5', data_format)\n        worksheet.write(row, 2, '', data_format)\n        worksheet.write(row, 3, '', data_format)\n        worksheet.write(row, 4, 'Low/Med/High', data_format)\n        row += 1\n    \n    workbook.close()\n    print(f\"✅ Feedback template created: {filename}\")\n    return filename\n\ndef create_google_form_questions():\n    \"\"\"Generate question list untuk Google Form creation.\"\"\"\n    \n    output_dir = '/workspace/user-testing-materials/feedback-forms'\n    output_file = f\"{output_dir}/google_form_questions.txt\"\n    \n    questions = {\n        \"Section 1: Basic Information\": [\n            \"Session ID (facilitator will provide)\",\n            \"Your stakeholder type (Petani/Produsen, Distributor/Trader, Regulator/Peneliti)\",\n            \"Location/Province where you work\",\n            \"Your experience level with digital platforms (Pemula, Menengah, Mahir)\"\n        ],\n        \n        \"Section 2: Usability Assessment (1-5 scale: 1=Very Difficult, 5=Very Easy)\": [\n            \"Finding the information you needed\",\n            \"Navigating between different pages\",\n            \"Understanding the menu structure\",\n            \"Speed of page loading\",\n            \"Visual appearance and design\",\n            \"Text clarity and readability\",\n            \"Size of buttons and interactive elements\",\n            \"How well it works on your device (mobile/desktop)\"\n        ],\n        \n        \"Section 3: Feature Usefulness (1-5 scale: 1=Not Useful, 5=Very Useful)\": [\n            \"Dashboard overview of commodity prices\",\n            \"Price prediction charts (7-30 days)\",\n            \"Regional price distribution map\",\n            \"Weather correlation analysis\",\n            \"Alert system for price changes\",\n            \"Data input functionality\",\n            \"Report generation and export\"\n        ],\n        \n        \"Section 4: Task Completion\": [\n            \"Were you able to complete the main task assigned to you? (Yes/Partially/No)\",\n            \"How difficult was the task overall? (1-5 scale)\",\n            \"What was the biggest challenge you faced?\",\n            \"What worked well for you?\"\n        ],\n        \n        \"Section 5: Value Proposition\": [\n            \"How helpful would this platform be for your daily work? (1-5 scale)\",\n            \"What is the biggest benefit you see from this platform?\",\n            \"What improvements are most needed?\",\n            \"Would you be willing to pay for this platform? (Yes/No/Maybe)\",\n            \"If yes, how much per month would be reasonable? (Free only, 25-50k, 50-100k, 100-250k, >250k)\"\n        ],\n        \n        \"Section 6: Overall Satisfaction\": [\n            \"How likely are you to recommend this platform to colleagues? (0-10 scale)\",\n            \"Describe this platform in three words\",\n            \"Any other comments or suggestions?\"\n        ]\n    }\n    \n    # Save to text file\n    with open(output_file, 'w', encoding='utf-8') as f:\n        f.write(\"GOOGLE FORM QUESTIONS - KOMODITAS WATCH USER TESTING\\n\")\n        f.write(\"=\" * 60 + \"\\n\\n\")\n        \n        for section, question_list in questions.items():\n            f.write(f\"{section}\\n\")\n            f.write(\"-\" * len(section) + \"\\n\")\n            \n            for i, question in enumerate(question_list, 1):\n                f.write(f\"{i}. {question}\\n\")\n            \n            f.write(\"\\n\")\n        \n        f.write(\"\\nNOTES FOR GOOGLE FORM SETUP:\\n\")\n        f.write(\"- Use section breaks between major categories\\n\")\n        f.write(\"- Make rating questions use linear scale (1-5 or 0-10)\\n\")\n        f.write(\"- Use multiple choice for categorical questions\\n\")\n        f.write(\"- Use paragraph text for open-ended responses\\n\")\n        f.write(\"- Set up response validation where appropriate\\n\")\n        f.write(\"- Enable response editing and progress bar\\n\")\n    \n    print(f\"✅ Google Form questions saved: {output_file}\")\n    return output_file\n\ndef main():\n    \"\"\"Generate feedback collection templates.\"\"\"\n    print(\"🔄 Generating user testing feedback collection templates...\")\n    \n    # Create Excel template\n    excel_file = create_feedback_template()\n    \n    # Create Google Form questions\n    form_file = create_google_form_questions()\n    \n    print(\"\\n✅ Template generation completed!\")\n    print(f\"📊 Excel Template: {excel_file}\")\n    print(f\"📝 Google Form Questions: {form_file}\")\n    print(\"\\n💡 Next steps:\")\n    print(\"1. Review Excel template dan customize if needed\")\n    print(\"2. Create Google Form using the question list\")\n    print(\"3. Test both collection methods with team\")\n    print(\"4. Choose primary method based on participant preference\")\n\nif __name__ == \"__main__\":\n    main()\n"
