version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: komoditas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: komoditas_watch
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - komoditas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d komoditas_watch"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: komoditas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - komoditas-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: komoditas-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/komoditas_watch
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key-change-in-production
      JWT_REFRESH_SECRET: development-refresh-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
      LOG_LEVEL: debug
      SWAGGER_ENABLED: true
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - komoditas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Migrations (run once)
  migrations:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: komoditas-migrations
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/komoditas_watch
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - komoditas-network
    command: ["npm", "run", "prisma:migrate"]
    restart: "no"

  # Prisma Studio (optional, for database management)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: komoditas-prisma-studio
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/komoditas_watch
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - komoditas-network
    command: ["npm", "run", "prisma:studio"]
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  komoditas-network:
    driver: bridge
